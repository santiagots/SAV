@model SAV.Models.ClienteViewModel
@using SAV.Models
@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm((string)ViewBag.Action, "Cliente", new { @idViaje = ViewBag.IdViaje }))
{
    @Html.HiddenFor(model => model.Id)
    @Html.ValidationSummary(true)
    <div id="content">
        <div class="headTables selected">
            <p>Datos del Cliente</p>
        </div>
        <div class="contenidoDatos">
            <div class="datosInputs">
                <p class="edicion obligatorio">@Html.LabelFor(model => model.Apellido)<b>(*)</b></p>
                @Html.TextBoxFor(model => model.Apellido)

                <p class="edicion obligatorio">@Html.LabelFor(model => model.Nombre)<b>(*)</b></p>
                @Html.TextBoxFor(model => model.Nombre)
            </div>

            <div class="datosInputs">
                <p class="edicion obligatorio">@Html.LabelFor(model => model.DNI)<b>(*)</b></p>
                @Html.TextBoxFor(model => model.DNI)
            </div>

            <div class="datosInputs">
                <p class="edicion obligatorio">@Html.LabelFor(model => model.Telefono)<b>(*)</b></p>
                @Html.TextBoxFor(model => model.Telefono)

                <p class="edicion obligatorio">@Html.LabelFor(model => model.TelefonoAlternativo)</p>
                @Html.TextBoxFor(model => model.TelefonoAlternativo)
            </div>

            <div class="datosInputs">
                <p class="edicion obligatorio">@Html.LabelFor(model => model.Sexo)<b>(*)</b></p>
                @Html.DropDownListFor(model => model.Sexo, from c in Enum.GetNames(typeof(SAV.Models.Sexo))
                                                            select new SelectListItem
                                                            {
                                                                Text = c,
                                                                Value = c
                                                            }, "Elija una opción")

                <p class="edicion obligatorio">@Html.LabelFor(model => model.Edad)<b>(*)</b></p>
                @Html.DropDownListFor(model => model.Edad, from c in Enum.GetNames(typeof(SAV.Models.Edad))
                                                           select new SelectListItem
                                                           {
                                                               Text = c,
                                                               Value = c
                                                           }, "Elija una opción")
            </div>

            <div class="datosInputs">
                <p class="edicion obligatorio">@Html.LabelFor(model => model.Nacionalidad)<b>(*)</b></p>
                @Html.EditorFor(model => model.Nacionalidad)

                <p class="edicion obligatorio">@Html.LabelFor(model => model.Email)</p>
                @Html.EditorFor(model => model.Email)
            </div>

            <div class="datosInputs">
                <p class="edicion obligatorio">@Html.LabelFor(model => model.Estudiante)</p>
                @Html.EditorFor(model => model.Estudiante)
            </div>

        </div>
        <div class="footerTables"></div>

        <div id="partialViewDomicilios">
            @Html.Partial("_DomiciliosTable", Model.Domicilios, new ViewDataDictionary { { "ClienteId", Model.Id } })
        </div>

            <div class="botones">
                <div class="boton">
                    <div class="inicioBotonGris"></div>
                    <input id="AgregarDireccion" class="centroBotonGris" type="button" value="Agregar Direccion" />
                    <div class="finBotonGris"></div>
                </div>
            </div>
            
            @if (ViewBag.ClienteIdViaje == null)
            {
                    <div class="botones" style="clear:both">
                        <div class="boton">
                            <div class="inicioBotonGris"></div>
                            <input id="GuardarDomicilio" class="centroBotonGris waiting" type="submit" value="Guardar" />
                            <div class="finBotonGris"></div>
                        </div>
                        <div class="boton">
                            <div class="inicioBotonGris"></div>
                            <input id="volver" class="centroBotonGris waiting disableValidation" type="button" value="Volver" onclick="location.href='@Url.Action("Search")    '"></input>
                            <div class="finBotonGris"></div>
                        </div>
                    </div>
            }


        @if (ViewBag.IdViaje != null)
        {
            <div class="headTables selected">
                <p>Datos del Viaje @ViewBag.Servicio</p>
            </div>
            <div class="contenidoDatos">

                <div class="datosInputs">
                    <p class="edicion obligatorio">@Html.LabelFor(model => model.VendedorAlta)</p>
                    @Html.TextBoxFor(model => model.VendedorAlta, new { @disabled = "disabled" })

                    <p class="edicion obligatorio">@Html.LabelFor(model => model.VendedorCobro)</p>
                    @Html.TextBoxFor(model => model.VendedorCobro, new { @disabled = "disabled" })
                </div>

                <div class="datosInputs">
                    <p class="edicion obligatorio">@Html.LabelFor(model => model.Origen)</p>
                    @Html.TextBoxFor(model => model.Origen, new { @disabled = "disabled" })

                    <p class="edicion obligatorio">@Html.LabelFor(model => model.Destino)</p>
                    @Html.TextBoxFor(model => model.Destino, new { @disabled = "disabled" })
                </div>

                @if (ViewBag.Servicio == ViajeTipoServicio.Puerta)
                {
                    <div class="datosInputs">
                        <p class="edicion obligatorio">@Html.LabelFor(model => model.Costo)<b>(*)</b></p>
                        @Html.TextBoxFor(model => model.Costo, Model.Pago ? (object)new { @disabled = "disabled" } : (object)new { })

                        <p class="edicion obligatorio">@Html.LabelFor(model => model.FormaPago)<b>(*)</b></p>
                        @Html.DropDownListFor(model => model.SelectFormaPago, new SelectList(Model.FormaPago, "Key", "Value"), "Elija una opción", !Model.Pago ? (object)new { @disabled = "disabled" } : (object)new { })
                    </div>
                    <div class="datosInputs">
                        <p class="edicion obligatorio">@Html.LabelFor(model => model.Pago)</p>
                        @Html.CheckBoxFor(model => model.Pago, Model.Pago ? (object)new { @disabled = "disabled" } : (object)new { })
                    </div>
                    <div class="datosInputs">
                        <p class="edicion obligatorio">@Html.LabelFor(model => model.DomicilioAscenso)</p>
                        @Html.DropDownListFor(model => model.SelectDomicilioAscenso, new SelectList(Model.DomicilioAscenso, "Key", "Value"), "Elija una opción")

                        <p class="edicion obligatorio">@Html.LabelFor(model => model.DomicilioDescenso)</p>
                        @Html.DropDownListFor(model => model.SelectDomicilioDescenso, new SelectList(Model.DomicilioDescenso, "Key", "Value"), "Elija una opción")
                    </div>
                }
                @if (ViewBag.Servicio == ViajeTipoServicio.Directo)
                {
                    <div class="datosInputs">
                        <p class="edicion obligatorio">@Html.LabelFor(model => model.Costo)<b>(*)</b></p>
                        @Html.TextBoxFor(model => model.Costo, Model.Pago ? (object)new { @disabled = "disabled" } : (object)new { })

                        <p class="edicion obligatorio">@Html.LabelFor(model => model.FormaPago)<b>(*)</b></p>
                        @Html.DropDownListFor(model => model.SelectFormaPago, new SelectList(Model.FormaPago, "Key", "Value"), "Elija una opción", !Model.Pago ? (object)new { @disabled = "disabled" } : (object)new { })
                    </div>
                    <div class="datosInputs">
                        <p class="edicion obligatorio">@Html.LabelFor(model => model.Pago)</p>
                        @Html.CheckBoxFor(model => model.Pago, Model.Pago ? (object)new { @disabled = "disabled" } : (object)new { })
                    </div>
                    <div class="datosInputs">
                        <p class="edicion obligatorio">@Html.LabelFor(model => model.ParadaAscenso)</p>
                        @Html.DropDownListFor(model => model.SelectParadaAscenso, new SelectList(Model.ParadaAscenso, "Key", "Value"), "Elija una opción")

                        <p class="edicion obligatorio">@Html.LabelFor(model => model.ParadaDescenso)</p>
                        @Html.DropDownListFor(model => model.SelectParadaDescenso, new SelectList(Model.ParadaDescenso, "Key", "Value"), "Elija una opción")
                    </div>

                    <div class="datosInputs">
                        <p class="edicion obligatorio">@Html.LabelFor(model => model.DomicilioAscenso)</p>
                        @Html.DropDownListFor(model => model.SelectDomicilioAscenso, new SelectList(Model.DomicilioAscenso, "Key", "Value"), "Elija una opción")

                        <p class="edicion obligatorio">@Html.LabelFor(model => model.DomicilioDescenso)</p>
                        @Html.DropDownListFor(model => model.SelectDomicilioDescenso, new SelectList(Model.DomicilioDescenso, "Key", "Value"), "Elija una opción")
                    </div>
                }
                @if (ViewBag.Servicio == ViajeTipoServicio.Cerrado)
                {
                    <div class="datosInputs">
                        <p class="edicion obligatorio">@Html.LabelFor(model => model.Pago)</p>
                        @Html.CheckBoxFor(model => model.Pago, Model.Pago ? (object)new { @disabled = "disabled" } : (object)new { })
                    </div>
                    <div class="datosInputs">
                        <p class="edicion obligatorio">@Html.LabelFor(model => model.ParadaAscenso)</p>
                        @Html.DropDownListFor(model => model.SelectParadaAscenso, new SelectList(Model.ParadaAscenso, "Key", "Value"), "Elija una opción")

                        <p class="edicion obligatorio">@Html.LabelFor(model => model.ParadaDescenso)</p>
                        @Html.DropDownListFor(model => model.SelectParadaDescenso, new SelectList(Model.ParadaDescenso, "Key", "Value"), "Elija una opción")
                    </div>

                    <div class="datosInputs">
                        <p class="edicion obligatorio">@Html.LabelFor(model => model.DomicilioAscenso)</p>
                        @Html.DropDownListFor(model => model.SelectDomicilioAscenso, new SelectList(Model.DomicilioAscenso, "Key", "Value"), "Elija una opción")

                        <p class="edicion obligatorio">@Html.LabelFor(model => model.DomicilioDescenso)</p>
                        @Html.DropDownListFor(model => model.SelectDomicilioDescenso, new SelectList(Model.DomicilioDescenso, "Key", "Value"), "Elija una opción")
                    </div>
                }
                <div class="botones">
                    <div class="boton">
                        <div class="inicioBotonGris"></div>
                        <input id="Guardar" class="centroBotonGris waiting" type="submit" value="Guardar" />
                        <div class="finBotonGris"></div>
                    </div>
                    <div class="boton">
                        <div class="inicioBotonGris"></div>

                        @if (!string.IsNullOrEmpty(ViewBag.From))
                        {
                            <input id="volver" class="centroBotonGris waiting disableValidation" type="button" value="Volver" onclick="location.href='@Url.Action(ViewBag.From, "Viaje", new { id = ViewBag.IdViaje })'" ></input>
                        }
                        else
                        {
                            <input id="volver" class="centroBotonGris waiting disableValidation" type="button" value="Volver" onclick="location.href='@Url.Action("Search", new { IdViaje = ViewBag.IdViaje })    '" ></input>
                        }
                        <div class="finBotonGris"></div>
                    </div>
                </div>
            </div>
            <div class="footerTables"></div>

            if(Model.ViajesEnElMismoDia != null && Model.ViajesEnElMismoDia.Count > 0)
            { 
            <div id="ViajesEnElMismoDia">
                    @Html.Partial("_ViajesEnElMismoDia", Model.ViajesEnElMismoDia)
            </div>
            }
        }

        <!-- RESULTADO TABLES -->
        <div id="ViajesCliente">
            @Html.Partial("_ViajesTable", Model.Viajes)
        </div>

        <div id="modal"></div>

        <div class="contenidoDatosError">
            <p>@Html.ValidationMessageFor(model => model.Apellido)</p>
            <p>@Html.ValidationMessageFor(model => model.Nombre)</p>
            <p>@Html.ValidationMessageFor(model => model.DNI)</p>
            <p>@Html.ValidationMessageFor(model => model.Telefono)</p>
            <p>@Html.ValidationMessageFor(model => model.Sexo)</p>
            <p>@Html.ValidationMessageFor(model => model.Edad)</p>
            <p>@Html.ValidationMessageFor(model => model.Nacionalidad)</p>
            <p>@Html.ValidationMessageFor(model => model.Email)</p>
            <p>@Html.ValidationMessageFor(model => model.Costo)</p>
            <p>@Html.ValidationMessageFor(model => model.SelectFormaPago)</p>
            <p>@Html.ValidationMessageFor(model => model.SelectDomicilioAscenso)</p>
            <p>@Html.ValidationMessageFor(model => model.SelectDomicilioDescenso)</p>
            <p>@Html.ValidationMessageFor(model => model.SelectParadaAscenso)</p>
            <p>@Html.ValidationMessageFor(model => model.SelectParadaDescenso)</p>
            <p>@Html.ValidationMessage("MaxPlace")</p>
            <p>@Html.ValidationMessage("ClientCreateMaxPlace")</p>
        </div>
        <div id="Error" class="contenidoDatosError">
        </div>
    </div>
    
    <input type="hidden" id="IdViaje" value="@ViewBag.IdViaje" />
    <input type="hidden" id="FechaSalida" value="@Model.FechaSalida" />
    <input type="hidden" id="Servicio" value="@ViewBag.Servicio" />
}

@Scripts.Render("~/bundles/ClienteCreate")

